&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
	СписокПараметров = Новый Структура("Доки", ОбъектыНазначенияМассив);
	//Оповещение = Новый ОписаниеОповещения("ОбъединитьЗаказы", ЭтотОбъект, СписокПараметров);	
	Ответ=Вопрос("Выполнить перемещение на склад возврата?",РежимДиалогаВопрос.ДаНет,,,"Вопрос");
	Если Ответ=КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	Форма = ПолучитьФорму("Документ.ПеремещениеТоваров.ФормаОбъекта");
	ДанныеФормы = Форма.Объект; // Получаем объект формы в переменную
	
	ОбработатьДоки(ОбъектыНазначенияМассив,ДанныеФормы);
	
	КопироватьДанныеФормы(ДанныеФормы, Форма.Объект); // копируем наш объект в объект формы и далее открываем ее
	Форма.Открыть();
	
КонецПроцедуры	



&НаСервереБезКонтекста
Процедура ОбработатьДоки(Доки,ДанныеФормы)
	ТЗ=0;
	Для каждого Док из Доки Цикл
		
		Если ТЗ=0 Тогда
			ТЗ=Док.Расхождения.Выгрузить();
		Иначе
			Для Каждого Стр из Док.Расхождения Цикл
				СтрТЗ=ТЗ.Добавить();
				ЗаполнитьЗначенияСвойств(СтрТЗ,Стр);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ТЗ.Свернуть("Номенклатура,Характеристика,Упаковка,АналитикаУчетаНоменклатуры","КоличествоУпаковок,Количество");
	Для Каждого Стр из ТЗ Цикл
		Стр.Количество=-Стр.Количество;
		Стр.КоличествоУпаковок=-Стр.КоличествоУпаковок;		
	КонецЦикла;
	
	ДокПерем = ДанныеФормыВЗначение(ДанныеФормы, Тип("ДокументОбъект.ПеремещениеТоваров"));

	ЗаполнитьЗначенияСвойств(ДокПерем,Доки[0]);
	
	ДокПерем.Дата=ТекущаяДата();
	ДокПерем.УстановитьНовыйНомер();
	
	ДокПерем.Статус=Перечисления.СтатусыПеремещенийТоваров.Принято;
	ДокПерем.СкладОтправитель=Доки[0].Склад;
	ДокПерем.СкладПолучатель=Справочники.Склады.НайтиПоНаименованию("Возвратный склад");
	ДокПерем.ХозяйственнаяОперация=Перечисления.ХозяйственныеОперации.ПеремещениеТоваров;
	Для каждого Стр из ТЗ Цикл
		Если Стр.Номенклатура.ТипНоменклатуры=Перечисления.ТипыНоменклатуры.Товар Тогда
			Стр1=ДокПерем.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(Стр1,Стр);
		КонецЕсли;
	КонецЦикла;

	
	ЗначениеВДанныеФормы(ДокПерем,ДанныеФормы);
	
КонецПроцедуры

